# Generated by Django 4.2.5 on 2024-04-16 14:27

from django.db import migrations


# replicated from model property because those are not accessible in migrations
def setup_complete(opp):
    if not (opp.paymentunit_set.count() > 0 and opp.total_budget and opp.start_date and opp.end_date):
        return False
    for pu in opp.paymentunit_set.all():
        if not (pu.max_total and pu.max_daily):
            return False
    return True


def push_down_payment_limits(apps, schema_editor):
    PaymentUnit = apps.get_model("opportunity.PaymentUnit")
    Opportunity = apps.get_model("opportunity.Opportunity")
    OpportunityClaim = apps.get_model("opportunity.OpportunityClaim")
    OpportunityClaimLimit = apps.get_model("opportunity.OpportunityClaimLimit")

    for opp in Opportunity.objects.all():
        if setup_complete(opp):
            continue
        if not opp.paymentunit_set.exists():
            continue
        if not opp.start_date:
            opp.start_date = opp.date_created.date()
        payment_units = list(opp.paymentunit_set.all())
        if len(payment_units) == 1:
            pu = payment_units[0]
            pu.max_total = opp.max_visits_per_user
            pu.max_daily = opp.daily_max_visits_per_user
            pu.save()
            for claim in OpportunityClaim.objects.filter(opportunity_access__opportunity=opp):
                OpportunityClaimLimit.objects.create(
                    opportunity_claim=claim, payment_unit=pu, max_visits=claim.max_payments
                )
        opp.save()


class Migration(migrations.Migration):
    dependencies = [
        ("opportunity", "0037_add_max_visits_squashed_0041_alter_opportunityclaim_max_payments"),
    ]

    operations = [
        migrations.RunPython(push_down_payment_limits, migrations.RunPython.noop, hints={"run_on_secondary": False}),
    ]
